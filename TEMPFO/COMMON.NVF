
: C! C!+ DROP; ,<   : SHN3 3 LOOPS : SHN1 ROT DUP H. ;
: FTYPE TOKEN? FOPEN ;FILE BEGIN KEY EMIT EOS? UNTIL ;
: M: ';  : ?M: CREATE (?",) DOES>     \ MACROSES
: SEVAL 0 SWAP CSTR ;TI ETIB LTIB EVAL ;
M: -IF` DUP 0< IF;      M: TEST` ." DUP 0< IF";

' `2DROPX  =, 2DROP;  0 VECTOR `vCREATE
LIKE ;DROP =, ;2DROP ,' 2DROP;
: `CREATE? ;2DROP LTIB TOKEN? 1+ @ #-- XOR 0; RDROP TO LTIB `vCREATE ;
: FAMILY   ;2DROP ' TO `vCREATE LOOPS DUP `CREATE? OVER + ;

: MARKER LTIB LOCATE IF DUP EXEC THEN DROP  TO LTIB
     HERE CREATE , DICT , DOES> STR TO HERE @ TO DICT ;

: ERASE 0
: FILL  ROT C!+ 1- DUP 1+ ROT 1-
: CMOVE ;2DROP LOOPS PUSH CSTR POP C!+ ;

0 VALUE DPTR  0 VALUE ADR  0 VALUE NPTR   : ?DU U/MOD SWAP IF 1+ THEN ;
\ -1 CONST -1
=H (SCAN> >, POP RDROP POP SWAP - 1- NIP; ,<
: SCAN      OVER PUSH PUSH  FOR  STR J XOR (IF (SCAN> NEXT J (JUMP TO (SCAN> ,<
: BSCAN W>B OVER PUSH PUSH  FOR CSTR J XOR (IF (SCAN> NEXT J (JUMP TO (SCAN> ,<

: DNEXT DPTR CSTR + @+ TO NPTR ;   : END? DUP TO DPTR C@ ;
: VLIST DICT SKIP BEGIN NPTR END? WHILE DNEXT H. DPTR ID. REPEAT ;

: [],  HERE DUP PUSH 2- DUP =: EXEC POP -
: CLARY HERE OVER ERASE ALLOT ;
LIKE ;` =, WARY LIKE OPER[] ,    ,' [],
LIKE ;` =, BARY LIKE OPER[] 2+ , ,' [],

MARKER EXTENTIONS   INCLUDE DEBUG.NVF

