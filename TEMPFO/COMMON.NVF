DICT HERE CREATE EXT. , ,

: BE ' ! ;
: OR OVER NOT AND XOR ;

: C! C!+ DROP; ,<
: SHN3 3 LOOPS : SHN1 ROT DUP H. ;
M: -IF` DUP 0< IF;

' `2DROPX  =, 2DROP;  0 VECTOR `vCREATE
LIKE ;DROP =, ;2DROP ,' 2DROP;
: uOVER+ XEP : OVER+ OVER + ;
: FAMILY   ;2DROP ' TO `vCREATE LOOPS DUP uOVER+
           ;2DROP LTIB TOKEN? 1+ @ $2D2D XOR 0;
         RDROP TO LTIB `vCREATE ;

: MARKER LTIB LOCATE IF DUP EXEC THEN DROP  TO LTIB
     DICT HERE CREATE , , ,< HERE 2+ BE EXT. >,
                DOES> STR TO HERE @ TO DICT ;

: ERASE 0
: FILL  ROT C!+ 1- DUP 1+ ROT 1-
: CMOVE ;2DROP LOOPS PUSH CSTR POP C!+ ;

0 VALUE DPTR  0 VALUE ADR  0 VALUE NPTR
: ?DU U/MOD SWAP IF 1+ THEN ;

=H (SCAN> >, POP RDROP POP SWAP - 1- NIP; ,<
: SCAN      OVER PUSH PUSH
        FOR  STR J XOR (IF (SCAN> NEXT J (JUMP TO (SCAN> ,<
: BSCAN W>B OVER PUSH PUSH
        FOR CSTR J XOR (IF (SCAN> NEXT J (JUMP TO (SCAN> ,<

: DNEXT DPTR CSTR + @+ TO NPTR ;   : END? DUP TO DPTR C@ ;
: VLIST DICT SKIP BEGIN NPTR END?
                  WHILE DNEXT H. DPTR ID. REPEAT ;

: [],  HERE DUP PUSH 2- DUP =: EXEC POP -
: CLARY HERE OVER ERASE ALLOT ;
LIKE ;` =, WARY LIKE OPER[] ,    ,' [],
LIKE ;` =, BARY LIKE OPER[] 2+ , ,' [],

  INCLUDE DEBUG.NVF

  INCLUDE BLOCKS.NVF

