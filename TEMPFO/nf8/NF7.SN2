$146 =: FORTH   $14C =: MACRO   $3BD =: @       $465 =: ,
$1C2 =: :       $495 =: ]       $116 =: HERE    $322 =: LIT
$360 =: 2+      $112 =: BL      $262 =: 0=      $3DA =: -

MACRO           $1C8 =: ;       $48B =: [       $1CE =: [LIT]   FORTH

$10E =: 0       $27F =: PARSE   $43D =: DROP
: \ 0 PARSE DROP ;  \  NOW WE HAVE WORD COMPILER  & COMMENTS
: =,  HERE =: , ;   \  CODE WORDS MAKER
$35A =, 1-          \ DECREMENT WITH 1
: C,  HERE !+ 1- [ 116 2+ , ] ;   \ BYTE COMPILER
$1c2 @ =, CONST   $112 @ ,  ] , [ \ CONSTANTS CREATOR
$1C2 @ =, CREATE  $2DD , 0 ,      \ BUFFERS CREATOR
$396  CONST #DOES       \ DOES ADDRESS CONSTANT
$39F  CONST #MAIN       \ MAIN LOOP ADDRESS CONSTANT
: R,  HERE 2+ - , ;
HERE $E8 C, #DOES R, ] C@ C, ;
DUP =, RET, $C3 ,       DUP =, #JMP, $E9 ,      =, #CAL, $E8 ,
3     CONST 3           2 CONST 2       1 CONST 1       -1 CONST -1

\ MEMORY WORDS    ALSO @
        $362 =: !       $2E5 =: STR     $3B8 =: C@      $304 =: !+

\ COMPILER / INTERPRETER / PARSER  STUF ->   PARSE ; [ [LIT]
        $192 =: EVAL    $12E =: CURR    $128 =: DICT    $11C =: ETIB
        $1DC =: ??      $43F =: TOKEN?  $15A =: OK.     $162 =: ERROR
: #??   0= ?? ;

\ MATHS   + - AND XOR ABS NOT 0= NEG 2*
$355 =, NOT     $354 =, NEG     $350 =, ABS     $3E3 =: +
$3E3 @ =, XOR   $CF33 ,  #JMP,  #MAIN R,
$3E3 @ =, AND   $CF23 ,  #JMP,  #MAIN R,
$262 @ =, 2*    $E1D1 , RET,
: ODD 1 AND ;


\ STACK WORDS           DROP
        $26A =: DUP     $327 =: PUSH    $2EF =, POP     $2E9 =: SWAP
        $3AB =, (CALL   $39B =, EX      $31C =, XCHG    $3EF =: EXIT
        $3A5 =: 0;

: JMP+ NOT 3 AND 2* POP + PUSH ;
: code; POP CURR @ ! ;
: W, STR , ;
: COMPILE POP W, PUSH ;

\ LOGICAL       0=

\ SEARCH WORDS
: FIND  TOKEN? (CALL [ $495 4 + , ] ODD ;
: ' FIND #?? ;
: LIKE ' @ ;            : ', ' , ;      : C" TOKEN? 1+ C@ ;

MACRO : DOES> COMPILE ;code #CAL, #DOES R, ; FORTH
: MAKER CREATE DUP   C, JMP+ , , , ',
        DOES>  CSTR  HERE =: JMP+ W, W, W, PERFORM ;

\ IO
        $152 =: EMIT

\ CONTROL WORDS
        $3D2 =: EXEC    $3B4 =: EXECUTE

HERE =: CREATE  $1c2 @ ,  $2DD @ ,  0    ,
HERE =: DEFER   $1c2 @ ,  $15A @ ,  $465 ,

$0396   CONSTANT #C      \ @DOES
3       CONSTANT 3


: \ 0 PARSE DROP ;      \ WE HAVE COMMENTS NOW
: =,   HERE =: , ;      \ CODE,  - DEFINES WORD BY ADDRES OF CODE


: HERE; HERE EX [ $116 2 + , ] ;
: C, HERE; !+ 1- ;      : ALLOT HERE; + ;
: ' TOKEN? (CALL [ $495 4 + , ] #?? ;
: ( [  C" ) , ] PARSE DROP ;



\ $0359 =,  2-





HERE  #C $E8 R, ] C@ C, ;    DUP     =, RET,  $C3 ,
DUP      =, CALL, $E8 ,              =, JMP,  $E9 ,

HERE  #C $E8 R, ] C@ R, ;

: NEXT, $398 JMP, ;



$0371 =:  (FOR
$037A =:  (IF
$03ED =:  (JUMP
$03E9 =:  (NEXT     \ _NEXT
$03D6 =:  PERFORM    \ _PERFORM

MACRO
' \    =:  \
' ',   =:  [',]
: [C"] C"   [',]  [LIT] ;
' (    =:  (
' HERE =: BEGIN
: DOES> COMPILE code; #C JMP, ;
FORTH

$030B =:  COUNT
: MAKER CREATE DUP C, JMP+ , , , ',
        DOES>  HERE =: COUNT JMP+ W, W, W, PERFORM ;

$03F1 =:  SKIP      \ _SKIP


10     CONSTANT lf      \ LINE FEED
13     CONSTANT cr      \ CARIDGE RETURN

: CR cr EMIT  lf EMIT



\ : CODE, =:  H2+ , ;
LIKE 2+ 1-     =, 1+

$02F7 =:  !-         \ _STM
$02FD =:  C!-        \ _STMB
$04AF =:  S!-        \ _STRPUSH

$0134 =:  (FIND
$02B5 =:  (FND
$0166 =:  (INIT
$026D =:  J
$04DB =:  A          \ _A
$04D8 =:  A<>        \ _AEX
$0271 =:  @EMIT      \ _@EMIT
$04E0 =:  @_INI      \ _@_INI
$0314 =:  (@_STR     \ _(@_STR
$03F3 =:  ABORT      \ _ABORT
$046F =:  ABORT?     \ _ABORT?
$015E =:  ACCEPT     \ _ACCEPT
$044B =:  ACCZ       \ _ACCZ
$04D1 =:  CMOVE      \ _CMOVE
$04A9 =:  CMOVEU     \ _CMOVEU
$0144 =:  CNTC       \ _CNTC
$01E5 =:  NUM,       \ _COMP_NUM
$02F2 =:  @+         \ _LDP
$03F5 =:  LOOPS      \ _LOOPS
$0122 =:  LTIB       \ _LTIB
$04C7 =:  S!         \ _MAKESTR
$04B7 =:  MPUSH      \ _MPUSH
$01EF =:  (NUM       \ _NUM
$01D4 =:  NUMBER     \ _NUMBER
$013A =:  OPERATION  \ _OPERATION
$0291 =:  (PARS      \ _PARS
$03EB =:  RDROP      \ _RDROP
$0168 =:  (REINI     \ _REINI
$0136 =:  SETPNT     \ _SETPNT
$0156 =:  SOURCE     \ _SOURCE
$0102 =:  TBL        \ _TBL
$010A =:  TBUF       \ _TBUF
$0433 =:  ".         \ _TDOT
$0106 =:  TIB        \ _TIB
\ $0279 =:  TOKEN      \ _TOKEN
$0429 =:  TYPES      \ _TYPES




$0173 =: @ABORT      \ @ABORT
$0439 =: @ABORTX     \ @ABORTX
$02E0 =: @ADR        \ @ADR
$0308 =: @ADRP       \ @ADRP
$025A =: @DRET       \ @DRET
$034B =: @DROP       \ @DROP
$019C =: @EVAL       \ @EVAL
$03CA =: @EXEC       \ @EXEC
$0491 =: @EXEC2P     \ @EXEC2P
$0386 =: @JUMP       \ @JUMP
$039D =: @LBL        \ @LBL
$0253 =: @LD@        \ @LD@
$048F =: @LPAR       \ @LPAR
$04BB =: @MPUSH      \ @MPUSH
$039C =: @NEST       \ @NEST
$03B1 =: @NEST2      \ @NEST2
$0381 =: @NEXT       \ @NEXT
$031F =: @PUSH       \ @PUSH
$0377 =: @RDROP      \ @RDROP
$039E =: @RETURN     \ @RETURN
$034A =: @RET_DR     \ @RET_DR
$0348 =: @RET_SELF   \ @RET_SELF
$037E =: @SKIP       \ @SKIP
$02EB =: @SWAP       \ @SWAP
$02DB =: @_CONS      \ @_CONS
$03C8 =: @_DEFER     \ @_DEFER
$03C1 =: @_DEFERO    \ @_DEFERO
$0259 =: @_DROP      \ @_DROP
$036A =: @_DUP       \ @_DUP
$0256 =: @_FOR       \ @_FOR
$02D4 =: @_IJ        \ @_IJ
$032F =: @_IO        \ @_IO
$0250 =: @_LD@       \ @_LD@
$0258 =: @_PUSH      \ @_PUSH
$024C =: @_RLD       \ @_RLD
$0366 =: @_SETVAR    \ @_SETVAR
$02DD =: @_VAR       \ @_VAR
