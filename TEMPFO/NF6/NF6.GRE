xt_states dw _arw                       ;= STATES  'STATES'
        _BCONST  xt_zer,0               ;= 0       '0'
        _BVECT   xt_BS,8                ;= BS      'BS'
        _BVECT   xt_BL,' '              ;= BL      'BL'
        _BVECT   xt_CCR,13              ;= CCR     'CCR'
        _BVECT   xt_LF,10               ;= LF      'LF'
        _CONST  XT_HBUF,0FF00H          ;= SBUF    'SBUF'
        _DEFER  xt_ACCEPT,XT_ACPT       ;= ACCEPT  'ACCEPT'
        _DEFER  xt_ERR,XT_INITQ         ;= ERROR   'ERROR'
        _DEFER  xt_OKV,0                ;= OKv     'OKv'
        _DEFERO xt_emit,xt_demit        ;= EMIT    'EMIT'
        _DEFER  xt_key,xt_dkey          ;= KEY     'KEY'
        _XT     XT_DZTO,docons3         ;= (DZTO   '(DZTO'
        _vector xt_SEARCH,0             ;= (SRCH   '(SRCH'
        _value  xt_ltb,0                ;= >IN     '>IN'
        _value  xt_etb,0                ;= TIB<    'TIB<'
        _value  xt_cntc,0               ;= CNTC    'CNTC'
        _VALUE  xt_tib,128              ;= TIB     'TIB'
        _VALUE  XT_LATEST,SELF1         ;= LATEST  'LATEST'
        _QUAN   XT_cstk,0               ;= CSTK    'CSTK'
        _QUAN   XT_here,freemem         ;= HERE    'HERE'
        _QUAN   xt_last,SELF1           ;= LAST    'LAST'
        _colon xt_execute               ;= EXECUTE 'EXECUTE'
        _colon xt_xdrop                 ;= ;DROP   ';DROP'
        _colon xt_times                 ;= TIMES   'TIMES'
        _COLON xt_eval                  ;= (EVAL   '(EVAL'
        _XT  XT_MOVE,@3DROP             ;= MOVE    'MOVE'
        _XT  XT_EPUSH,@2nip             ;= S!-     'S!-'
        _XT  XT_movSTR,@2nip            ;= S!      'S!'
       _XT  XT_strpc,@NIP               ;= S+C!    'S+C!'
        _COLON XT_TOKEN                 ;= TOKEN   'TOKEN'
        _COLON  xt_entry                ;= ENTRY   'ENTRY'
        _XT  XT_number,@ninu            ;= (NUMBER '(NUMBER'
        _xt  XT_PARS,@nup               ;= PARSE   'PARSE'
        _XT   XT_DOES,_DOES4            ;= (DZ     '(DZ'
        _XT  XT_acpt,@2DROP             ;= (DA     '(DA'
        _XT  XT_demit,@DRoP             ;= (DE     '(DE'
        _XT  XT_dkey,@pusha             ;= (DK     '(DK'
        _XT  XT_count,_COUNT            ;= CSTR    'CSTR'
        _xt  XT_CFETCH,_CFETCH          ;= C@      'C@'
        _xt  XT_CSTORE,@2DROP           ;= C!      'C!'
        _xt  XT_FETCH,_FETCH            ;= @       '@'
        _XT  XT_STORE,@2DROP            ;= !       '!'
        _XT  XT_STR,@PUSHA              ;= STR     'STR'
        _XT   XT_STWM,_STWM             ;= !-      '!-'
        _xt  XT_storep,_STWP            ;= !+      '!+'
        _PRIM XT_FETCHp                 ;= @+      '@+'
        _PRIM XT_CSTOREp                ;= C!+     'C!+'
        _xt xt_eqz,@nop                 ;= 0=      '0='
        _xt XT_lit,@PUSHA               ;= (#      '(#'
        _XT  XT_TOEVAL,@ninu            ;= >EVAL   '>EVAL'
        _XT  XT_MINUS,_SUB              ;= -       '-'
        _XT  XT_PLUS,_ADD               ;= +       '+'
        _XT  XT_CPLUS,_ADDCON           ;= (#+     '(#+'
        _XT  XT_2P,_2PX                 ;= 2+      '2+'
        _xt xt_0swap,@nup               ;= 0SWAP   '0SWAP'
        _XT XT_DIG,@nop                 ;= DIG     'DIG'
        _XT XT_DIV,@Dinu                ;= UM/MOD  'UM/MOD'
        _XT XT_MUL,@ninu                ;= UM*     'UM*'
        _XT XT_drop,_DROP               ;= DROP    'DROP'
        _xt XT_pop,_pop                 ;= POP     'POP'
        _xt XT_push,_push               ;= PUSH    'PUSH'
        _XT XT_TUCK,@TUCKA              ;= TUCK    'TUCK'
        _XT XT_OVER,@TUCKA              ;= OVER    'OVER'
        _XT XT_ROT,@CTUCK               ;= ROT     'ROT'
        _XT XT_MROT,@CTUCK              ;= -ROT    '-ROT'
        _XT XT_SWAP,@SWAP               ;= SWAP    'SWAP'
        _xt XT_I,@pusha                 ;= I       'I'
        _xt XT_j,@pusha                 ;= J       'J'
        _XT XT_semi,_does0              ;= ;`      ';`'
        _XT XT_col,_does1               ;= :       ':'
        _COLON  XT_COMMA                ;= ,       ','
        _COLON  XT_COMMAB               ;= C,      'C,'
        _xt XT_litcom,_does0            ;= (#,     '(#,'
        _COLON XT_CODECOM               ;= CODE,   'CODE,'
        _XT XT_CPOP,_DOES2              ;= (POP,   '(POP,'
        _XT XT_CDROP,_DOES2             ;= (DROP,  '(DROP,'
        _XT XT_BCALL,_DOES2             ;= (CAL,   '(CAL,'
        _COLON XT_REL                   ;= (REL    '(REL'
        _COLON xt_clit                  ;= (NUM,   '(NUM,'
        _XT XT_@XPE,_@XPE               ;= @XPE    '@XPE'
        _XT XT_0BR,_0BR                 ;= (0BR    '(0BR'
        _XT XT_br,_jump                 ;= (BR     '(BR'
        _xt XT_exec,_exec               ;= EXEC    'EXEC'
        _xt XT_perform,_perform         ;= @EXEC   '@EXEC'
        _XT XT_exit,_exit               ;= ;;      ';;'
        _xt XT_0ex,_0ex                 ;= 0;      '0;'
        _XT XT_FOR,_FOR                 ;= (FOR    '(FOR'
        _XT XT_NEXT,_NEXT               ;= (NXT    '(NXT'
        _XT XT_RDROP,_RDROP             ;= RDROP   'RDROP'
        _XT XT_DROPX,_DROPX             ;= DROP;   'DROP;'
        _XT XT_skip ,_skip              ;= (skp    '(skp'
        _XT XT_OF   ,_OF                ;= (OF     '(OF'
        _XT XT_ifm  ,_ifm               ;= (-BR    '(-BR'
        _XT XT_XCHG,@NOP                ;= XCHG    'XCHG'
        _XT XT_EX,@NOP                  ;= EX      'EX'
        _XT XT_?DUP,_?DUP               ;= ?DUP    '?DUP'
        _XT XT_DUP,_DUP                 ;= DUP     'DUP'
        _XT XT_1P,_1PX                  ;= 1+      '1+'
        _XT XT_1M,_1MX                  ;= 1-      '1-'
        _XT XT_lbrak,_DZFIND            ;= [`      '[`'
        _XT XT_find,@pusha              ;= FIND    'FIND'
        _XT XT_rbrak,_DZFIND            ;= ]       ']'
        _XT XT_findC,@pusha             ;= FINDC   'FINDC'
        _XT XT_TO,_DZtOaT               ;= TO      'TO'
        _COLON XT_TICK                  ;= '       ''''
        _COLON xt_num                   ;= (NUM    '(NUM'
        _XT XT_ABORT,_INI4TH            ;= ABORT   'ABORT'
        _COLON2 XT_NZ?                  ;= <>0?    '<>0?'
        _COLON2 XT_Z?                   ;= =0?     '=0?'
        _COLON  XT_INITQ                ;= (INIT   '(INIT'
        _XT XT_BYE,0                    ;= BYE     'BYE'
        _XT XT_BP,@NOP                  ;= BRP.    'BRP.'
        _PRIM  XT_ASM                   ;= >4TH    '>4TH'
        _XT XT_CTRL_OUT,@NOP            ;= BL<.    'BL<.'
        _BCONST XT_1H,16                ;= 1H      '1H'
        _CONST  XT_1B,256               ;= 1B      '1B'
        _COLON  XT_XSPC                 ;= ;SPC    ';SPC'
        _COLON  XT_DM                   ;= #1      '#1'
        _colon  xt_numo                 ;= .       '.'
        _COLONP XT_nprt                 ;= ..      '..'
_DD:    _COLONP  XT_PDIG                ;= .DIG    '.DIG'
        _colon xt_cr                    ;= CR      'CR'
        _colon xt_ok_do                 ;= DO_OK   'DO_OK'
        _colon xt_id                    ;= ID.     'ID.'
        _colon xt_list                  ;= VLIST   'VLIST'
        _COLON   XT_Hprt                ;= H.      'H.'
        _COLONP  XT_PWORD               ;= .W      '.W'
        _COLONP  XT_PBYTE               ;= .B      '.B'
        _COLON  XT_ADRSTR               ;= ("      '("'
        _COLON XT_SKOBA                 ;= .[]     '.[]'
        _colon xt_Xtype                 ;= ;TYPE   ';TYPE'
        _colonP xt_type                 ;= TYPE    'TYPE'
        _colonP xt_Ptype                ;= PTYPE   'PTYPE'
        _colon xt_DUMP                  ;= DUMP    'DUMP'
        _colonP  xt_DU                  ;= DU      'DU'
        _colon xt_scom                  ;= >N,     '>N,'

