Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 1
nf70.asm



      1				     ; _1P,  _2DIV,  _A@P,   _ADD,   _AND,   _DROPX, _DUP,   _EXIT
      2				     ; _FOR, _I,     _IF,    _IFM,   _IFM1,  _J,     _JPDROP,_JUMP
      3				     ; _NIPX, _NOP,  _POP,   _PUSH,  _RDROP, _RLDP,  _RLDPB, _ZSKIP
      4				     ; _RSTP, _RSTR, _SKDROP, _SUB,  _SWAPX, _UDIV,  _ULESS, _XCHG
      5				     ; _XOR,  _ZEQ,  _NEXT,  _STAP,  _DROP,  _2P,    _1M,    _2M
      6
      7				     ; +2/ u2/ and drop	dup ; (0br (-br	(br. (br
      8				     ; 2DIV; ADD2D; AND; DROP; DUP; EXIT; IF; IFM; JPDROP; JUMP
      9				     ; (next pop push rdrop dropsk skip	!+ xchg	xor 0.skip
     10				     ; NEXT; POP; PUSH;	RDROP; SKDROP; SKIP; STP; XCHG;	XOR; ZSKIP
     11				     ; @+ !- 1+	2+ 1- 2- c!+ c@+
     12
     13
     14
     15
     16					     INCLUDE  NF70.i0
1    17				     locals  @@
1    18
1    19	      =	dword ptr	     pd	 equ dword ptr
1    20	      =	word  ptr	     pw	 equ word  ptr
1    21	      =	byte  ptr	     pb	 equ byte  ptr
1    22
1    23	      =0002		     TO_     =	2
1    24	      =0004		     AT_     =	4
1    25	      =0006		     VL_     =	6
1    26
1    27				     ddup    macro
1    28				       to_d  t
1    29					     endm
1    30
1    31				     drop    macro
1    32				       d_to  t
1    33					     endm
1    34
1    35				     TO_d    MACRO  REG
1    36				       PUSH   REG
1    37					     ENDM
1    38
1    39				     d_TO    MACRO  REG
1    40				       pop   reg
1    41					     ENDM
1    42
1    43				     JMPS    MACRO  LBL
1    44					       jmp  SHORT LBL
1    45					     ENDM
1    46
1    47				     SKIPA   MACRO
1    48					     DB	   03DH
1    49					     ENDM
1    50
1    51				     SKIPB   MACRO
1    52					     DB	   03CH
1    53					     ENDM
1    54
1    55				     SKIPBr  MACRO regb
1    56					     mov   regb,0
1    57					     org   $-1
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 2
nf70.asm



1    58					     ENDM
1    59
1    60				     SKIPr   MACRO reg
1    61					     mov   reg,0
1    62					     org   $-2
1    63					     ENDM
1    64
1    65
1    66				     TO_R    MACRO  REG
1    67				       x
1    68				       PUSH   REG
1    69				       x
1    70					     ENDM
1    71
1    72				     R_TO    MACRO  REG
1    73				       x
1    74				       POP    REG
1    75				       x
1    76					     ENDM
1    77
1    78				     cf_to   macro  reg
1    79				       sbb   reg,reg
1    80					     endm
1    81
1    82				     rchg    macro   reg
1    83				       xchg  ax,reg
1    84					     endm
1    85
1    86				     i2	     macro  reg
1    87					     inc   reg
1    88					     inc   reg
1    89					     endm
1    90
1    91				     w2p    macro
1    92					     scasw
1    93					     endm
1    94
1    95				     x	    macro
1    96					     Xchg  R,D
1    97					     endm
1    98
1    99	      =0000		     qqqqq = 0
1   100	      =0000		     ppppp = qqqqq
1   101
1   102	      =0000		     @_CNT__A =	0
1   103
1   104				     __nam    macro   msg
1   105				       local endstr
1   106					db    endstr-$-1
1   107					db    msg
1   108				     endstr  label   byte
1   109					     endm
1   110
1   111				     __nam2   macro   msg
1   112				       local endstr
1   113					db    endstr-$-1
1   114					db    msg
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 3
nf70.asm



1   115				     endstr  label   byte
1   116				       __a  0
1   117					     endm
1   118
1   119				     __ln     macro   token
1   120				     ppppp = $
1   121				       __nam  token
1   122				       dw    qqqqq
1   123				     qqqqq = ppppp
1   124					     endm
1   125
1   126				     __a  MACRO	 FLAG
1   127					     IF	($-START+FLAG) AND 1
1   128					     NOP
1   129				     @_CNT__A =	@_CNT__A +  1
1   130					     ENDIF
1   131					     ENDM
1   132
1   133				     __c macro	_wrd
1   134					     __a  1
1   135					     call  _wrd
1   136					     endm
1   137
1   138				     __d macro
1   139					     dw	 @_does
1   140					     endm
1   141
1   142				     __w macro	_wrd
1   143					     __a  0
1   144				     _wrd =   $+1
1   145					     endm
1   146
1   147				     __L    macro _lbl
1   148					     __a  0
1   149				     _LBL    =	    $
1   150					     endm
1   151
1   152				     __entry  macro nam,ADR
1   153					     DW	   ADR,0
1   154					     __nam  nam
1   155					     endm
1   156
1   157				     ;--------------------------------------
1   158
1   159				     __VAR    macro   LBL,DAT
1   160					     __w LBL
1   161					     DW	     @_VAR,DAT
1   162					     ENDM
1   163
1   164				     __XT     macro   LBL,ADR
1   165					     __w LBL
1   166					     DW	     ADR
1   167					     ENDM
1   168
1   169				     __value  macro   lbl,dat
1   170					     __w LBL
1   171					     DW	    @_cons2,@_setvar,dat
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 4
nf70.asm



1   172					     endm
1   173
1   174				     __DEFERO macro  lbl,dat
1   175					     __w LBL
1   176					     DW	     _deferO,dat
1   177					     endm
1   178
1   179				     __DEFER  macro   lbl,dat
1   180					     __w LBL
1   181					     DW	    _JUMP,dat
1   182					     endm
1   183
1   184				     __vector macro   lbl,dat
1   185					     __w LBL
1   186					     DW	    @_defer2,@_setvar,dat
1   187					     endm
1   188
1   189				     __point  macro   lbl,dat
1   190					     __w LBL
1   191					     DW	    @_point,_setpnt,dat
1   192					     endm
1   193
1   194				     __QUAN   MACRO   LBL,DAT
1   195					     __w LBL
1   196					     DW	    @_CONS3,@_setvar2,@_VAR,dat
1   197					     ENDM
1   198
1   199				     ;__VOC    MACRO   LBL,DAT
1   200				     ;	     __w LBL
1   201				     ;	      DW     @_SET_VOC,@_SRCH_VOC,dat
1   202				     ;	      ENDM
1   203
1   204				     __const  macro   lbl,dat
1   205					     __w LBL
1   206					     DW	   @_cons,DAT
1   207					     endm
1   208
1   209
    210
    211				     ; REGISTERS
    212				     ; ip   INSTRUCTION	POINTER
    213				     ; dsp  DATA STACK POINTER
    214				     ; rsP  RETURN STACK POINTER
    215				     ; top  DATA STACK TOP REGISTER
    216				     ; w    word register  = scratch
    217				     ; t    temp register  - scratch
    218				     ; c    count register - scratch
    219
    220	      =SI		     i	  = si	      ;	for interpretter
    221	      =BP		     r	  = bp
    222	      =SP		     d	  = sp
    223	      =DI		     t	  = di
    224	      =DX		     a	  = dx	     ; arith register
    225	      =CX		     c	  = cx
    226	      =AX		     w	  = ax
    227	      =AL		     wl	  = aL
    228	      =AH		     wh	  = ah
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 5
nf70.asm



    229
    230	      =DI		     NBASE = di
    231	      =BX		     NACC  = bx
    232
    233
    234	0000			     MyCseg  segment para  use16
    235
    236					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    237
    238					     org 100h
    239
    240	      =-0100		     @TBUF   = -256	     ;	256
    241	      =-0200		     @TIB    = @TBUF  *	2    ;	256
    242							     ;	512 B FSTACK
    243	      =-0400		     @R_TOP  = @TIB   *	2    ; 1024 B RSTACK
    244	      =-0800		     @S_TOP  = @R_TOP *	2    ; 2048 B DSTACK
    245	      =-1000		     @VOCTOP = @S_TOP *	2    ; 4096 B =	4 BUFFERS * 1024 B
    246
    247	0100			     Start   Label byte
    248
    249				     ;	      JMPS SELF0
    250
    251				     ; __W _OPERATION
    252				     ;	      DW _WARY,_NUMBER,_EXEC	    ; INTERPRET
    253				     ;	      DW _COMP_NUM,_COMMA     ;	COMPILE
    254				     ;
    255				     ;;	 __DEFER  _ACCEPT,_ACC
    256				     ;	__DEFER	 _OK,0
    257				     ;	__DEFER	 _ERROR,0
    258				     ;;	 __DEFER  _OK,_@OK
    259				     ;;	 __DEFER  _ERROR,_@ERROR
    260				     ;
    261				     ;	__CONST	_@SOURCE,@_SOURCE   ;_ETIB
    262				     ;	__CONST	 _TBL,80H
    263				     ;	__CONST	 _TIB,@TIB
    264				     ;	__CONST	 _TBUF,@TBuf
    265				     ;	__CONST	 _0,0
    266				     ;_BYE    =	$-1   ;	JMP TO 0
    267				     ;
    268				     ;	__CONST	 _BL,32
    269				     ;
    270				     ;	__POINT	 _INIT,_@_INI
    271				     ;	__VALUE	 _HERE,FREEMEM
    272				     ;	__VALUE	 _ETIB,0
    273				     ;	__VALUE	 _LTIB,0
    274				     ;	__VALUE	 _DICT,@VOCTOP*2
    275				     ;	__VALUE	 _CNTC,0
    276				     ;@CNTC   =	$-2
    277				     ;	__value	 _stat,0
    278				     ;
    279				     ;------------  MAIN LOOP  OUTER INTERPRETTER ----
    280
    281	0100			     SELF0:
    282				     ;Start   Label byte
    283	0100  BB 1000		      mov   bx,1000h	 ; only	64k allocate
    284	0103  B8 4A00		      mov   ax,4a00h
    285	0106  CD 21		      int   21h
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 6
nf70.asm



    286	0108			     _ABORT:
    287	0108  BE 0112r		      mov   i,offset R_TOP
    288	010B  AD		      lodsw
    289				      rchg  R
1   290	010C  95		       xchg  ax,R
    291	010D  AD		      lodsw
    292				      rchg  D
1   293	010E  94		       xchg  ax,D
    294				      __C   @RETURN
1   295					     __a  1
2   296					     IF	($-START+1) AND	1
2   297					     NOP
2   298				     @_CNT__A =	@_CNT__A +  1
2   299					     ENDIF
1   300	010F  E8 0023			     call  @RETURN
    301
    302	0112  FC00 F800		     R_TOP  dw @R_TOP,@S_TOP
    303
    304				     ;------------  inner INTERPRETTER ----
    305				     ; CONTROL	    COMMANDS
    306				     ; xep ex exit execute nop skip zskip
    307				     ; -if if jump f>c f>c; 0;
    308
    309				      __L _STMb
1   310					     __a  0
2   311					     IF	($-START+0) AND	1
2   312					     NOP
2   313				     @_CNT__A =	@_CNT__A +  1
2   314					     ENDIF
1   315	      =MYCSEG:0116	     _STMb    =	     $
    316				       d_to  w
1   317	0116  58		       pop   w
    318	0117  88 45 FF		       mov   [T-1],wl
    319
    320				      __L _1M
1   321					     __a  0
2   322					     IF	($-START+0) AND	1
2   323					     NOP
2   324				     @_CNT__A =	@_CNT__A +  1
2   325					     ENDIF
1   326	      =MYCSEG:011A	     _1M    =	   $
    327				       JMPS  @1M
1   328	011A  EB 05			       jmp  SHORT @1M
    329
    330				      __L _STM
1   331					     __a  0
2   332					     IF	($-START+0) AND	1
2   333					     NOP
2   334				     @_CNT__A =	@_CNT__A +  1
2   335					     ENDIF
1   336	      =MYCSEG:011C	     _STM    =	    $
    337	011C  8F 45 FE		       POP   PW	[T-2]
    338
    339				      __L _2M
1   340					     __a  0
2   341					     IF	($-START+0) AND	1
2   342	011F  90			     NOP
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 7
nf70.asm



2   343	      =0001		     @_CNT__A =	@_CNT__A +  1
2   344					     ENDIF
1   345	      =MYCSEG:0120	     _2M    =	   $
    346	0120  4F		       DEC  T
    347	0121			     @1M:
    348	0121  4F		       DEC  T
    349				       JMPS  _MAIN
1   350	0122  EB 5A			       jmp  SHORT _MAIN
    351
    352				      __L _nipx
1   353					     __a  0
2   354					     IF	($-START+0) AND	1
2   355					     NOP
2   356				     @_CNT__A =	@_CNT__A +  1
2   357					     ENDIF
1   358	      =MYCSEG:0124	     _nipx    =	     $
    359				       D_to  w
1   360	0124  58		       pop   w
    361				       SKIPB
1   362	0125  3C			     DB	   03CH
    363
    364				      __L _DROPx
1   365					     __a  0
2   366					     IF	($-START+0) AND	1
2   367					     NOP
2   368				     @_CNT__A =	@_CNT__A +  1
2   369					     ENDIF
1   370	      =MYCSEG:0126	     _DROPx    =      $
    371				       DROP
1   372				       d_to  t
2   373	0126  5F		       pop   t
    374				       SKIPR c
1   375	0127  B9 0000			     mov   c,0
1   376					     org   $-2
    377
    378				      __l _rDROPx
1   379					     __a  0
2   380					     IF	($-START+0) AND	1
2   381					     NOP
2   382				     @_CNT__A =	@_CNT__A +  1
2   383					     ENDIF
1   384	      =MYCSEG:0128	     _rDROPx	=      $
    385				       i2    r
1   386	0128  45			     inc   r
1   387	0129  45			     inc   r
    388
    389				      __l _exit	       ; exit
1   390					     __a  0
2   391					     IF	($-START+0) AND	1
2   392					     NOP
2   393				     @_CNT__A =	@_CNT__A +  1
2   394					     ENDIF
1   395	      =MYCSEG:012A	     _exit    =	     $
    396	012A  8B 76 00		       mov   i,[r]
    397				       jmps  _rdrop
1   398	012D  EB 4D			       jmp  SHORT _rdrop
    399	012F			     @does3:
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 8
nf70.asm



    400				       i2    i
1   401	012F  46			     inc   i
1   402	0130  46			     inc   i
    403	0131			     @does2:
    404				       i2    i
1   405	0131  46			     inc   i
1   406	0132  46			     inc   i
    407	0133			     @does:
    408	0133  8B FE		       mov   t,i
    409	0135			     @return:
    410				       d_to  i
1   411	0135  5E		       pop   i
    412				       jmps  _main
1   413	0136  EB 46			       jmp  SHORT _main
    414
    415				      __l _xchg
1   416					     __a  0
2   417					     IF	($-START+0) AND	1
2   418					     NOP
2   419				     @_CNT__A =	@_CNT__A +  1
2   420					     ENDIF
1   421	      =MYCSEG:0138	     _xchg    =	     $
    422	0138  87 7E 00		       xchg  t,[r]
    423				       skipb
1   424	013B  3C			     DB	   03CH
    425
    426				      __L _DuP
1   427					     __a  0
2   428					     IF	($-START+0) AND	1
2   429					     NOP
2   430				     @_CNT__A =	@_CNT__A +  1
2   431					     ENDIF
1   432	      =MYCSEG:013C	     _DuP    =	    $
    433				       ddup
1   434				       to_d  t
2   435	013C  57		       PUSH   t
    436				       skipr c
1   437	013D  B9 0000			     mov   c,0
1   438					     org   $-2
    439
    440				      __L _STP
1   441					     __a  0
2   442					     IF	($-START+0) AND	1
2   443					     NOP
2   444				     @_CNT__A =	@_CNT__A +  1
2   445					     ENDIF
1   446	      =MYCSEG:013E	     _STP    =	    $
    447				       d_to  w
1   448	013E  58		       pop   w
    449	013F  AB		       stosw
    450				       JMPS  _MAIN
1   451	0140  EB 3C			       jmp  SHORT _MAIN
    452
    453				      __l _ex
1   454					     __a  0
2   455					     IF	($-START+0) AND	1
2   456					     NOP
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 9
nf70.asm



2   457				     @_CNT__A =	@_CNT__A +  1
2   458					     ENDIF
1   459	      =MYCSEG:0142	     _ex    =	   $
    460	0142  87 76 00		       xchg  i,[r]
    461				       skipr c
1   462	0145  B9 0000			     mov   c,0
1   463					     org   $-2
    464
    465				      __L _STPB
1   466					     __a  0
2   467					     IF	($-START+0) AND	1
2   468					     NOP
2   469				     @_CNT__A =	@_CNT__A +  1
2   470					     ENDIF
1   471	      =MYCSEG:0146	     _STPB    =	     $
    472				       d_to  w
1   473	0146  58		       pop   w
    474	0147  AB		       stosw
    475				       JMPS  _MAIN
1   476	0148  EB 34			       jmp  SHORT _MAIN
    477
    478				      __L _LDP
1   479					     __a  0
2   480					     IF	($-START+0) AND	1
2   481					     NOP
2   482				     @_CNT__A =	@_CNT__A +  1
2   483					     ENDIF
1   484	      =MYCSEG:014A	     _LDP    =	    $
    485	014A  FF 35		       PUSH  PW	[T]
    486
    487				      __L _2P
1   488					     __a  0
2   489					     IF	($-START+0) AND	1
2   490					     NOP
2   491				     @_CNT__A =	@_CNT__A +  1
2   492					     ENDIF
1   493	      =MYCSEG:014C	     _2P    =	   $
    494	014C  47		       INC   T
    495	014D			     @1P:
    496	014D  47		       INC   T
    497				       JMPS  _MAIN
1   498	014E  EB 2E			       jmp  SHORT _MAIN
    499
    500				      __L _1P
1   501					     __a  0
2   502					     IF	($-START+0) AND	1
2   503					     NOP
2   504				     @_CNT__A =	@_CNT__A +  1
2   505					     ENDIF
1   506	      =MYCSEG:0150	     _1P    =	   $
    507				       JMPS  @1p
1   508	0150  EB FB			       jmp  SHORT @1p
    509
    510				      __l _and
1   511					     __a  0
2   512					     IF	($-START+0) AND	1
2   513					     NOP
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 10
nf70.asm



2   514				     @_CNT__A =	@_CNT__A +  1
2   515					     ENDIF
1   516	      =MYCSEG:0152	     _and    =	    $
    517				       d_to  w
1   518	0152  58		       pop   w
    519	0153  23 F8		       and   t,w
    520				       jmps  _main
1   521	0155  EB 27			       jmp  SHORT _main
    522
    523				      __l _xor
1   524					     __a  0
2   525					     IF	($-START+0) AND	1
2   526	0157  90			     NOP
2   527	      =0002		     @_CNT__A =	@_CNT__A +  1
2   528					     ENDIF
1   529	      =MYCSEG:0158	     _xor    =	    $
    530				       d_to  w
1   531	0158  58		       pop   w
    532	0159  33 F8		       xor   t,w
    533				       jmps  _main
1   534	015B  EB 21			       jmp  SHORT _main
    535
    536				       __l _for
1   537					     __a  0
2   538					     IF	($-START+0) AND	1
2   539	015D  90			     NOP
2   540	      =0003		     @_CNT__A =	@_CNT__A +  1
2   541					     ENDIF
1   542	      =MYCSEG:015E	     _for    =	    $
    543	015E  8B 34			mov   I,[I]
    544
    545				      __l _push
1   546					     __a  0
2   547					     IF	($-START+0) AND	1
2   548					     NOP
2   549				     @_CNT__A =	@_CNT__A +  1
2   550					     ENDIF
1   551	      =MYCSEG:0160	     _push    =	     $
    552				       d_to  w
1   553	0160  58		       pop   w
    554	0161  97		       xchg  w,t
    555				       skipr c	 ; jmps	@rpush
1   556	0162  B9 0000			     mov   c,0
1   557					     org   $-2
    558
    559	0163			     @NESTz:
    560	0163  48		       dec   w
    561	0164			     @NEST:
    562	0164  96		       xchg  w,i
    563	0165			     @rpush:
    564				       to_r  w
1   565				       x
2   566	0165  87 EC			     Xchg  R,D
1   567	0167  50		       PUSH   w
1   568				       x
2   569	0168  87 EC			     Xchg  R,D
    570				       JMPs  _MAIN
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 11
nf70.asm



1   571	016A  EB 12			       jmp  SHORT _MAIN
    572
    573				     ; LOGICAL	    COMMANDS  XOR AND not
    574
    575				      __l _add2d
1   576					     __a  0
2   577					     IF	($-START+0) AND	1
2   578					     NOP
2   579				     @_CNT__A =	@_CNT__A +  1
2   580					     ENDIF
1   581	      =MYCSEG:016C	     _add2d    =      $
    582				       d_to  w
1   583	016C  58		       pop   w
    584	016D  03 F8		       add   t,w
    585				       to_d  t
1   586	016F  57		       PUSH   t
    587
    588				      __l _2div
1   589					     __a  0
2   590					     IF	($-START+0) AND	1
2   591					     NOP
2   592				     @_CNT__A =	@_CNT__A +  1
2   593					     ENDIF
1   594	      =MYCSEG:0170	     _2div    =	     $
    595	0170  D1 DF		       rcr   t,1
    596				       jmps  _main
1   597	0172  EB 0A			       jmp  SHORT _main
    598
    599				     ; MAIN  LOOP  INNER INTERPRETTER
    600
    601				      __l _go
1   602					     __a  0
2   603					     IF	($-START+0) AND	1
2   604					     NOP
2   605				     @_CNT__A =	@_CNT__A +  1
2   606					     ENDIF
1   607	      =MYCSEG:0174	     _go    =	   $
    608	0174  8B F7		       mov   i,t
    609				       jmps  @drop
1   610	0176  EB 34			       jmp  SHORT @drop
    611
    612				      __L _pop
1   613					     __a  0
2   614					     IF	($-START+0) AND	1
2   615					     NOP
2   616				     @_CNT__A =	@_CNT__A +  1
2   617					     ENDIF
1   618	      =MYCSEG:0178	     _pop    =	    $
    619				       ddup
1   620				       to_d  t
2   621	0178  57		       PUSH   t
    622	0179  8B 7E 00		       MOV   T,[R]
    623
    624				      __l _rDROP
1   625					     __a  0
2   626					     IF	($-START+0) AND	1
2   627					     NOP
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 12
nf70.asm



2   628				     @_CNT__A =	@_CNT__A +  1
2   629					     ENDIF
1   630	      =MYCSEG:017C	     _rDROP    =      $
    631				       i2    r
1   632	017C  45			     inc   r
1   633	017D  45			     inc   r
    634
    635				      __l _MAIN
1   636					     __a  0
2   637					     IF	($-START+0) AND	1
2   638					     NOP
2   639				     @_CNT__A =	@_CNT__A +  1
2   640					     ENDIF
1   641	      =MYCSEG:017E	     _MAIN    =	     $
    642	017E  AD		       lodsw
    643	017F  A8 01		       test  wl,1
    644	0181  75 E0		       Jnz   @NESTz
    645	0183  FF E0		       JMP   w
    646	0185			     @JPDROP:
    647				       drop
1   648				       d_to  t
2   649	0185  5F		       pop   t
    650
    651				      __l _jump
1   652					     __a  0
2   653					     IF	($-START+0) AND	1
2   654					     NOP
2   655				     @_CNT__A =	@_CNT__A +  1
2   656					     ENDIF
1   657	      =MYCSEG:0186	     _jump    =	     $
    658	0186  8B 34		       MOV   I,[I]
    659				       JMPS  _MAIN
1   660	0188  EB F4			       jmp  SHORT _MAIN
    661
    662				      __L _ZSKIP
1   663					     __a  0
2   664					     IF	($-START+0) AND	1
2   665					     NOP
2   666				     @_CNT__A =	@_CNT__A +  1
2   667					     ENDIF
1   668	      =MYCSEG:018A	     _ZSKIP    =      $
    669	018A  0B FF		       or    t,t
    670	018C  75 F0		       jnz   _main
    671	018E			     _SKDROP:
    672				       drop
1   673				       d_to  t
2   674	018E  5F		       pop   t
    675	018F			     @skip:
    676	018F  AD		       lodsw
    677				       JMPS  _MAIN
1   678	0190  EB EC			       jmp  SHORT _MAIN
    679
    680				      __L _NEXT
1   681					     __a  0
2   682					     IF	($-START+0) AND	1
2   683					     NOP
2   684				     @_CNT__A =	@_CNT__A +  1
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 13
nf70.asm



2   685					     ENDIF
1   686	      =MYCSEG:0192	     _NEXT    =	     $
    687	0192  FF 4E 00		       DEC   PW	[R]
    688				       skipr c
1   689	0195  B9 0000			     mov   c,0
1   690					     org   $-2
    691
    692				      __l _ifm
1   693					     __a  0
2   694					     IF	($-START+0) AND	1
2   695					     NOP
2   696				     @_CNT__A =	@_CNT__A +  1
2   697					     ENDIF
1   698	      =MYCSEG:0196	     _ifm    =	    $
    699	0196  0B FF		       or    t,t
    700	0198  79 EC		       Jns   _jump
    701	019A			     _skip:
    702				       JMPS  @SKIP
1   703	019A  EB F3			       jmp  SHORT @SKIP
    704
    705				      __l _if
1   706					     __a  0
2   707					     IF	($-START+0) AND	1
2   708					     NOP
2   709				     @_CNT__A =	@_CNT__A +  1
2   710					     ENDIF
1   711	      =MYCSEG:019C	     _if    =	   $
    712	019C  0B FF		       or    t,t
    713	019E  75 EE		       JNZ   _SKDROP
    714	01A0			     _JPDROP:
    715				       JMPS  @JPDROP
1   716	01A0  EB E3			       jmp  SHORT @JPDROP
    717
    718				      __l _at		     ; @
1   719					     __a  0
2   720					     IF	($-START+0) AND	1
2   721					     NOP
2   722				     @_CNT__A =	@_CNT__A +  1
2   723					     ENDIF
1   724	      =MYCSEG:01A2	     _at    =	   $
    725	01A2  8B 3D		       mov   t,[t]
    726				       jmps  _main
1   727	01A4  EB D8			       jmp  SHORT _main
    728
    729				      __l _j		     ; j
1   730					     __a  0
2   731					     IF	($-START+0) AND	1
2   732					     NOP
2   733				     @_CNT__A =	@_CNT__A +  1
2   734					     ENDIF
1   735	      =MYCSEG:01A6	     _j	   =	  $
    736				       ddup
1   737				       to_d  t
2   738	01A6  57		       PUSH   t
    739	01A7  8B 7E 02		       mov   T,[R+2]
    740				       JMPS  _main
1   741	01AA  EB D2			       jmp  SHORT _main
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 14
nf70.asm



    742	01AC			     @drop:
    743				       drop
1   744				       d_to  t
2   745	01AC  5F		       pop   t
    746				       jmps  _main
1   747	01AD  EB CF			       jmp  SHORT _main
    748
    749				      __l _lda		     ; a@
1   750					     __a  0
2   751					     IF	($-START+0) AND	1
2   752	01AF  90			     NOP
2   753	      =0004		     @_CNT__A =	@_CNT__A +  1
2   754					     ENDIF
1   755	      =MYCSEG:01B0	     _lda    =	    $
    756	01B0  8B C2		       mov   w,a
    757				       jmps  _pushw
1   758	01B2  EB 10			       jmp  SHORT _pushw
    759
    760				      __L _@EMITD
1   761					     __a  0
2   762					     IF	($-START+0) AND	1
2   763					     NOP
2   764				     @_CNT__A =	@_CNT__A +  1
2   765					     ENDIF
1   766	      =MYCSEG:01B4	     _@EMITD	=      $
    767	01B4  52		       push  dx
    768	01B5  8B D7		       MOV   DX,T
    769	01B7  B4 02		       MOV   AH,2
    770	01B9  CD 21		       INT   21H
    771	01BB  5A		       pop   dx
    772	01BC			     _drop:
    773				       JMPS  @drop
1   774	01BC  EB EE			       jmp  SHORT @drop
    775
    776				      __L _@KEYD
1   777					     __a  0
2   778					     IF	($-START+0) AND	1
2   779					     NOP
2   780				     @_CNT__A =	@_CNT__A +  1
2   781					     ENDIF
1   782	      =MYCSEG:01BE	     _@KEYD    =      $
    783	01BE  B4 08		       MOV   AH,8
    784	01C0  CD 21		       INT   21H
    785
    786				      __l _pushb
1   787					     __a  0
2   788					     IF	($-START+0) AND	1
2   789					     NOP
2   790				     @_CNT__A =	@_CNT__A +  1
2   791					     ENDIF
1   792	      =MYCSEG:01C2	     _pushb    =      $
    793	01C2  B4 00		       MOV   wH,0
    794
    795				      __l _pushw
1   796					     __a  0
2   797					     IF	($-START+0) AND	1
2   798					     NOP
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 15
nf70.asm



2   799				     @_CNT__A =	@_CNT__A +  1
2   800					     ENDIF
1   801	      =MYCSEG:01C4	     _pushw    =      $
    802				       ddup
1   803				       to_d  t
2   804	01C4  57		       PUSH   t
    805	01C5  97		       xchg  w,t
    806				       JMPS  _main
1   807	01C6  EB B6			       jmp  SHORT _main
    808
    809				      __L _LIT
1   810					     __a  0
2   811					     IF	($-START+0) AND	1
2   812					     NOP
2   813				     @_CNT__A =	@_CNT__A +  1
2   814					     ENDIF
1   815	      =MYCSEG:01C8	     _LIT    =	    $
    816	01C8  AD		       LODSW
    817				       JMPS  _PUSHW
1   818	01C9  EB F9			       jmp  SHORT _PUSHW
    819
    820				      __L _cstr
1   821					     __a  0
2   822					     IF	($-START+0) AND	1
2   823	01CB  90			     NOP
2   824	      =0005		     @_CNT__A =	@_CNT__A +  1
2   825					     ENDIF
1   826	      =MYCSEG:01CC	     _cstr    =	     $
    827	01CC  8B 05		       MOV   w,[T]
    828	01CE  47		       inc   t
    829				       jmps  _pushb
1   830	01CF  EB F1			       jmp  SHORT _pushb
    831
    832				      __L _cST@P
1   833					     __a  0
2   834					     IF	($-START+0) AND	1
2   835	01D1  90			     NOP
2   836	      =0006		     @_CNT__A =	@_CNT__A +  1
2   837					     ENDIF
1   838	      =MYCSEG:01D2	     _cST@P    =      $
    839	01D2  97		       XCHG  w,T
    840	01D3  87 FA		       XCHG  T,A
    841	01D5  AA		       STOSB
    842
    843				      __l _sta
1   844					     __a  0
2   845					     IF	($-START+0) AND	1
2   846					     NOP
2   847				     @_CNT__A =	@_CNT__A +  1
2   848					     ENDIF
1   849	      =MYCSEG:01D6	     _sta    =	    $
    850	01D6  87 D7		       XCHG  a,t
    851				       JMPS  @drop
1   852	01D8  EB D2			       jmp  SHORT @drop
    853
    854				      __L _cLD@P
1   855					     __a  0
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 16
nf70.asm



2   856					     IF	($-START+0) AND	1
2   857					     NOP
2   858				     @_CNT__A =	@_CNT__A +  1
2   859					     ENDIF
1   860	      =MYCSEG:01DA	     _cLD@P    =      $
    861	01DA  87 F2		       XCHG  I,A
    862	01DC  AC		       LODSB
    863	01DD  87 F2		       XCHG  I,A
    864				       JMPS  _pushb
1   865	01DF  EB E1			       jmp  SHORT _pushb
    866
    867				      __L _MULAD     ;	1 AR AND IF T ADD THEN U2/ ;
1   868					     __a  0
2   869					     IF	($-START+0) AND	1
2   870	01E1  90			     NOP
2   871	      =0007		     @_CNT__A =	@_CNT__A +  1
2   872					     ENDIF
1   873	      =MYCSEG:01E2	     _MULAD    =      $
    874	01E2  58		       POP   w
    875	01E3  A8 01		       TEST  wL,1
    876	01E5  74 02		       JE    @MUL
    877	01E7  03 FA		       ADD   T,A
    878	01E9			     @MUL:
    879	01E9  D1 DF		       RCR   T,1
    880	01EB  D1 D8		       RCR   w,1
    881	01ED  50		       PUSH  w
    882	01EE  EB 8E		       JMP   _MAIN
    883
    884				      __L _DIVSUB    ;	1 AR AND IF T ADD THEN U2/ ;
1   885					     __a  0
2   886					     IF	($-START+0) AND	1
2   887					     NOP
2   888				     @_CNT__A =	@_CNT__A +  1
2   889					     ENDIF
1   890	      =MYCSEG:01F0	     _DIVSUB	=      $
    891	01F0  58		       POP   w
    892	01F1  D1 E0		       SHL   w,1
    893	01F3  D1 D7		       RCL   T,1
    894	01F5  3B FA		       CMP   T,A
    895	01F7  72 03		       JB    @DIV
    896	01F9  2B FA		       SUB   T,A
    897	01FB  40		       INC   w
    898	01FC			     @DIV:
    899	01FC  50		       PUSH  w
    900	01FD  E9 FF7E		       JMP   _MAIN
    901
    902				      __W _ZEQ
1   903					     __a  0
2   904					     IF	($-START+0) AND	1
2   905					     NOP
2   906				     @_CNT__A =	@_CNT__A +  1
2   907					     ENDIF
1   908	      =MYCSEG:0201	     _ZEQ =   $+1
    909	0200  019Cr 020Br	       DW  _IF,_M1
    910				      __W _0
1   911					     __a  0
2   912					     IF	($-START+0) AND	1
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 17
nf70.asm



2   913					     NOP
2   914				     @_CNT__A =	@_CNT__A +  1
2   915					     ENDIF
1   916	      =MYCSEG:0205	     _0	=   $+1
    917	0204  01C8r 0000 012Ar	       DW  _LIT,0,_EXIT
    918				      __W _M1
1   919					     __a  0
2   920					     IF	($-START+0) AND	1
2   921					     NOP
2   922				     @_CNT__A =	@_CNT__A +  1
2   923					     ENDIF
1   924	      =MYCSEG:020B	     _M1 =   $+1
    925	020A  01C8r FFFF 012Ar	       DW  _LIT,-1,_EXIT
    926
    927				      __W _UMMUL
1   928					     __a  0
2   929					     IF	($-START+0) AND	1
2   930					     NOP
2   931				     @_CNT__A =	@_CNT__A +  1
2   932					     ENDIF
1   933	      =MYCSEG:0211	     _UMMUL =	$+1
    934	0210  01D6r 0205r 0216r	  +    DW  _STA,_0,$+2,$+2,$+2,_MULAD ,_MULAD ,_EXIT
    935	      0218r 021Ar 01E2r	  +
    936	      01E2r 012Ar
    937
    938				      __W _UMDIVM
1   939					     __a  0
2   940					     IF	($-START+0) AND	1
2   941					     NOP
2   942				     @_CNT__A =	@_CNT__A +  1
2   943					     ENDIF
1   944	      =MYCSEG:0221	     _UMDIVM =	 $+1
    945	0220  01D6r 0205r 0226r	  +    DW  _STA,_0,$+2,$+2,$+2,_DIVSUB,_DIVSUB,_EXIT
    946	      0228r 022Ar 01F0r	  +
    947	      01F0r 012Ar
    948
    949	0230			     freemem:
    950	0230  0001		       DW ENDMEM-FREEMEM-2
    951				       ;__ENTRY	 '=:',_ENTRY
    952	0232  00		       DB 0
    953	0233			     EndMem:
    954
    955	      =0000		     lastw = ppppp
    956
    957	0233			     MyCseg  ends
    958					     end  Start
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 18
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "08/29/15"
??FILENAME		Text   "nf70	"
??TIME			Text   "16:12:59"
??VERSION		Number 0314
@1M			Near   MYCSEG:0121		   328	#347
@1P			Near   MYCSEG:014D		   #495	 508
@CPU			Text   0101H
@CURSEG			Text   MYCSEG			   #234
@DIV			Near   MYCSEG:01FC		   895	#898
@DOES			Near   MYCSEG:0133		   #407
@DOES2			Near   MYCSEG:0131		   #403
@DOES3			Near   MYCSEG:012F		   #399
@DROP			Near   MYCSEG:01AC		   610	#742  774  852
@FILENAME		Text   NF70
@JPDROP			Near   MYCSEG:0185		   #646	 716
@MUL			Near   MYCSEG:01E9		   876	#878
@NEST			Near   MYCSEG:0164		   #561
@NESTZ			Near   MYCSEG:0163		   #559	 644
@RETURN			Near   MYCSEG:0135		   300	#409
@RPUSH			Near   MYCSEG:0165		   #563
@R_TOP			Number -0400			   #243	 244  302
@SKIP			Near   MYCSEG:018F		   #675	 703
@S_TOP			Number -0800			   #244	 245  302
@TBUF			Number -0100			   #240	 241
@TIB			Number -0200			   #241	 243
@VOCTOP			Number -1000			   #245
@WORDSIZE		Text   2			   #234
@_CNT__A		Number 0007			   #102	 343  #343  527	 #527  540  #540  753  #753  824  #824	836  #836 +
							   871	#871
A			Number DX			   #224	 756  840  850	861  863  877  894  896
AT_			Number 0004			   #24
C			Number CX			   #225	 375  437  462	556  689
D			Number SP			   #222	 293  566  569
ENDMEM			Near   MYCSEG:0233		   950	#953
FREEMEM			Near   MYCSEG:0230		   #949	 950
I			Number SI			   #220	 287  396  401	402  405  406  408  411	 460  543  543	562  608  +
							   658	658  861  863
LASTW			Number 0000			   #955
NACC			Number BX			   #231
NBASE			Number DI			   #230
PB			Text   byte  ptr		   #21
PD			Text   dword ptr		   #19
PPPPP			Number 0000			   #100	 955
PW			Text   word  ptr		   #20	337  485  687
QQQQQ			Number 0000			   #99	100
R			Number BP			   #221	 290  386  387	396  422  460  566  569	 622  632  633	687  739
R_TOP			Word   MYCSEG:0112		   287	#302
SELF0			Near   MYCSEG:0100		   #281
START			Byte   MYCSEG:0100		   #247	 296  311  322	332  341  354  366  380	 391  417  428	442  455  +
							   467	480  489  502  512  525	 538  547  577	590  603  614  626  637	  +
							   653	664  682  694  707  720	 731  751  762	778  788  797  811  822	  +
							   834	845  856  869  886  904	 912  920  929	940  958
T			Number DI			   #223	 318  337  346	348  373  408  422  435	 485  494  496	519  532  +
							   554	584  586  595  608  621	 622  649  669	669  674  699  699  712	  +
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 19
Symbol Table



							   712	725  725  738  739  745	 768  804  805	827  828  839  840  850	  +
							   877	879  893  894  896
TO_			Number 0002			   #23
VL_			Number 0006			   #25
W			Number AX			   #226	 317  360  448	473  518  519  531  532	 553  554  560	562  567  +
							   583	584  645  756  805  827	 839  874  880	881  891  892  897  899
WH			Number AH			   #228	 793
WL			Number AL			   #227	 318  643  875
_0			Number MYCSEG:0205		   #916	 934  945
_1M			Number MYCSEG:011A		   #326
_1P			Number MYCSEG:0150		   #506
_2DIV			Number MYCSEG:0170		   #594
_2M			Number MYCSEG:0120		   #345
_2P			Number MYCSEG:014C		   #493
_@EMITD			Number MYCSEG:01B4		   #766
_@KEYD			Number MYCSEG:01BE		   #782
_ABORT			Near   MYCSEG:0108		   #286
_ADD2D			Number MYCSEG:016C		   #581
_AND			Number MYCSEG:0152		   #516
_AT			Number MYCSEG:01A2		   #724
_CLD@P			Number MYCSEG:01DA		   #860
_CST@P			Number MYCSEG:01D2		   #838
_CSTR			Number MYCSEG:01CC		   #826
_DIVSUB			Number MYCSEG:01F0		   #890	 945  945
_DROP			Near   MYCSEG:01BC		   #772
_DROPX			Number MYCSEG:0126		   #370
_DUP			Number MYCSEG:013C		   #432
_EX			Number MYCSEG:0142		   #459
_EXIT			Number MYCSEG:012A		   #395	 917  925  934	945
_FOR			Number MYCSEG:015E		   #542
_GO			Number MYCSEG:0174		   #607
_IF			Number MYCSEG:019C		   #711	 909
_IFM			Number MYCSEG:0196		   #698
_J			Number MYCSEG:01A6		   #735
_JPDROP			Near   MYCSEG:01A0		   #714
_JUMP			Number MYCSEG:0186		   #657	 700
_LDA			Number MYCSEG:01B0		   #755
_LDP			Number MYCSEG:014A		   #484
_LIT			Number MYCSEG:01C8		   #815	 917  925
_M1			Number MYCSEG:020B		   909	#924
_MAIN			Number MYCSEG:017E		   350	413  451  476  498  521	 534  571  597	#641  660  670	678  727  +
							   741	747  807  882  900
_MULAD			Number MYCSEG:01E2		   #873	 934  934
_NEXT			Number MYCSEG:0192		   #686
_NIPX			Number MYCSEG:0124		   #358
_POP			Number MYCSEG:0178		   #618
_PUSH			Number MYCSEG:0160		   #551
_PUSHB			Number MYCSEG:01C2		   #792	 830  865
_PUSHW			Number MYCSEG:01C4		   758	#801  818
_RDROP			Number MYCSEG:017C		   398	#630
_RDROPX			Number MYCSEG:0128		   #384
_SKDROP			Near   MYCSEG:018E		   #671	 713
_SKIP			Near   MYCSEG:019A		   #701
_STA			Number MYCSEG:01D6		   #849	 934  945
_STM			Number MYCSEG:011C		   #336
_STMB			Number MYCSEG:0116		   #315
_STP			Number MYCSEG:013E		   #446
Turbo Assembler	 Version 3.2	    08/29/15 16:12:59	    Page 20
Symbol Table



_STPB			Number MYCSEG:0146		   #471
_UMDIVM			Number MYCSEG:0221		   #944
_UMMUL			Number MYCSEG:0211		   #933
_XCHG			Number MYCSEG:0138		   #421
_XOR			Number MYCSEG:0158		   #529
_ZEQ			Number MYCSEG:0201		   #908
_ZSKIP			Number MYCSEG:018A		   #668

Macro Name						   Cref	(defined at #)

CF_TO							   #78
DDUP							   #27	433  619  736  802
DROP							   #31	371  647  672  743
D_TO							   #39	316  359  372  410  447	 472  517  530	552  582  648  673  744
I2							   #86	385  400  404  631
JMPS							   #43	327  349  397  412  450	 475  497  507	520  533  570  596  609	  +
							   659	677  702  715  726  740	 746  757  773	806  817  829  851  864
RCHG							   #82	289  292
R_TO							   #72
SKIPA							   #47
SKIPB							   #51	361  423
SKIPBR							   #55
SKIPR							   #60	374  436  461  555  688
TO_D							   #35	434  585  620  737  803
TO_R							   #66	564
W2P							   #91
X							   #95	565  568
__A							   #126	 295  310  321	331  340  353  365  379	 390  416  427	441  454  +
							   466	479  488  501  511  524	 537  546  576	589  602  613  625  636	  +
							   652	663  681  693  706  719	 730  750  761	777  787  796  810  821	  +
							   833	844  855  868  885  903	 911  919  928	939
__C							   #133	 294
__CONST							   #204
__D							   #138
__DEFER							   #179
__DEFERO						   #174
__ENTRY							   #152
__L							   #147	 309  320  330	339  352  364  378  389	 415  426  440	453  465  +
							   478	487  500  510  523  536	 545  575  588	601  612  624  635  651	  +
							   662	680  692  705  718  729	 749  760  776	786  795  809  820  832	  +
							   843	854  867  884
__LN							   #119
__NAM							   #104
__NAM2							   #111
__POINT							   #189
__QUAN							   #194
__VALUE							   #169
__VAR							   #159
__VECTOR						   #184
__W							   #142	 902  910  918	927  938
__XT							   #164

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  0233 Para	none		   #234	 236  236  236	236
