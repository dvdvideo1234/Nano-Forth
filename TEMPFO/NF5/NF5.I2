
        _COLON  XT_COMMAB               ;= C,
        DW XT_HERE,XT_STOREP,XT_1M,XT_HERE+_TO,XT_EXIT

        _XT XT_CTRL_OUT,@NOP            ;= BL<.
        CMP   BL,' '
        Jnb   @@EMIT
        MOV   BL,'.'
@@EMIT: RET

        _xt xt_0swap,@nup               ;= 0SWAP
        xor   ax,ax
        ret

        _XT XT_DIG,@nop                 ;= DIG
        CMP   BL,10
        JL    @@1
        ADD   BL,7
@@1:    ADD   BL,'0'
        RET

        _XT XT_DIV,@Dinu                ;= UM/MOD
        DIV   BX
XDTOP:  MOV   BX,DX
        RET

        _XT XT_MUL,@ninu                ;= UM*
        MUL   BX
        JMP   XDTOP

        _XT XT_XCHG,@NOP                ;= XCHG
        XCHG  BX,[BP]
        RET

        _XT XT_EX,@NOP                  ;= EX
        XCHG  SI,[BP]
        RET

        _xt   xt_neg,@nop             ;= neg
        neg   bx
        ret

        _XT XT_BP,@NOP                  ;= BRP.
        INT   3
        RET

        _PRIM  XT_ASM                   ;= >4TH
        JMP   SI

        _xt XT_I,@pusha                 ;= I
        mov  ax,[bp]
        RET

        _xt  XT_j,@pusha                ;= J
        mov  ax,[bp+2]
        RET

        _XT  XT_STORE,@2DROP            ;= !
        mov  [BX],ax
        RET

        _xt  XT_CSTORE,@2DROP           ;= C!
        MOV  [BX],AL
        RET

        _XT  XT_sub,@NIP                ;= -
        XCHG AX,BX
        SUB  BX,AX
        RET

        _XT  XT_PLUS,@NIP               ;= +
        ADD  BX,AX
        RET

        _XT  XT_MOVE,@3DROP             ;= MOVE
        MOV  DI,BX
        XCHG CX,DI
        JMP  __MOVE?

