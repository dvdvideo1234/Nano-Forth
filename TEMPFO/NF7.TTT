xt_states dw _arw                       ;= STATES
        _BCONST xt_zer,0                ;= 0
        _BVECT  xt_BL,' '               ;= BL
XT_SPACE = XT_BL+_TO                    ;= SPACE
        _CONST  XT_HBUF,0FF00H          ;= SBUF
        _DEFER  xt_ACCEPT,XT_ACPT       ;= ACCEPT
        _DEFER  xt_ERR,0                ;= ERROR
        _DEFER  xt_OKV,0                ;= OKv
        _DEFERO xt_emit,xt_demit        ;= EMIT
        _DEFER  xt_key,xt_dkey          ;= KEY
        _POINT  XT_DoSRCH,0             ;= (SRCH?
        _value  xt_ltb,0                ;= >IN
        _value  xt_etb,0                ;= TIB<
        _value  xt_cntc,0               ;= CNTC
        _VALUE  xt_tib,128              ;= TIB
        _VALUE  XT_LAST,SELF1           ;= LAST
        _VALUE  XT_here,freemem         ;= HERE
        _VALUE  xt_latest,SELF1         ;= LAteST
        _COLON xt_eval                  ;= (EVAL
        _XT  XT_count,_COUNT            ;= CSTR
        _PRIM  XT_EPUSH                 ;= S!-
        _XT  XT_movSTR,@2nip            ;= S!
        _XT  XT_strpc,@NIP              ;= S+C!
        _COLON XT_TOKEN                 ;= ="
        _COLON  xt_entry                ;= =:
        _XT  XT_number,@ninu            ;= (>#
        _xt   XT_PARS,@nup              ;= PARSE
        _PRIM  XT_acpt                  ;= (DA
        _XT  XT_demit,@DRoP             ;= (DE
        _XT  XT_dkey,@pusha             ;= (DK
        _XT  XT_CFETCHD,@PUSHA          ;= C@.
        _xt  XT_CFETCH,_CFETCH          ;= C@
        _xt  XT_FETCH,_FETCH            ;= @    !!!
        _xt  XT_storep,_STWP            ;= !+
        _xt  XT_Cstore,@2DROP           ;= C!
        _XT  XT_FETCHp,_LDWP            ;= @+
        _COLON XT_STR                   ;= STR
        _xt  XT_lit,@PUSHA              ;= (#
        _XT  XT_TOEVAL,@ninu            ;= >EVAL
        _xt xt_eqz,@nop                 ;= 0=
        _XT XT_0LESS,@NOP               ;= 0<
        _XT XT_ULESS,@NIP               ;= U<
        _XT  XT_WITHIN,@2NIP            ;= WITHIN
        _XT XT_2P,_2P                   ;= 2+
        _XT XT_1P,_1P                   ;= 1+
        _XT XT_PLUS,@NIP                ;= +
        _XT XT_MINUS,@NIP               ;= -
        _XT XT_DUP,_DUP                 ;= DUP
        _XT XT_drop,_DROP               ;= DROP
        _xt XT_pop,_pop                 ;= POP
        _xt XT_push,_push               ;= PUSH
        _XT XT_SWAP,@SWAP               ;= SWAP
        _XT XT_semi,_does0              ;= ;`
        _XT XT_col,_does1               ;= :
        _COLON  XT_COMMA                ;= ,
        _xt XT_litcom,_does0            ;= #`
        _COLON XT_CODECOM               ;= =:,
        _COLON xt_clit                  ;= (NUM,
        _XT XT_0BR,_0BR                 ;= (0BR
        _XT XT_br,_jump                 ;= (BR
        _xt XT_exec,_exec               ;= EXEC
        _xt XT_perform,_perform         ;= @EXEC
        _XT XT_SKIP,_SKIP               ;= SKIP
        _XT XT_exit,_exit               ;= ;;
        _xt XT_0ex,_0ex                 ;= 0;
        _XT XT_DROPX,_DROPX             ;= DROP;
        _XT XT_SWAPX,_SWAPX             ;= DROP;
        _XT  XT_FIND,@SWAP              ;= FIND
        _XT XT_DEC,@NOP                 ;= DEC
        _COLON XT_lbrak                 ;= [`
        _COLON XT_rbrak                 ;= ]
        _COLON xt_num                   ;= (NUM
        _PRIM XT_ABORT                  ;= ABORT
        _XT xt_qm,_DOES5                ;= c?
        _COLON  XT_TOKEN?               ;= TOKEN?
        _COLONP XT_NZ?                  ;= <>0?
        _COLONP XT_Z?                   ;= =0?
        _bvect  xt_BS,8                 ;= bs
        _bvect  xt_CCR,13               ;= cr
