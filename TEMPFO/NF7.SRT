
$2C2 =: ;HERE   $272 =:  ;`     $26C =:  :      $1A6 =: C!+     $13A =:  HERE
: C, ;HERE C!+ ;  $2D8 =: =,    $222 =:  +      $21D =:  -      $20C =:  @
HERE $DB0B , $EE79 ,  HERE $4B C,  HERE $D3F7 , $E9EB ,  =, NOT  =, NEG  =, ABS
$44F =, DROP;   $300 =: WORD    $4E5 =: #DOES   $205 =: C@      $1E4 =: DUP
$211 =: ,<`     $4E3 =: >,      $434 =, ;DROP >, DROP; ,<
HERE $E8 C, #DOES HERE 2 + - , >, C@ WORD DROP; ,<  DUP =, \ 0 C,  =, { '} C,
\ : ALLOT ;HERE + ;       \ NOW WE HAVE COMMENTS
$1D3 =: (ASTR      \ _ASTR  - PRIMITIVE
$282 =:  LOOPS     \ _LOOPS
$10C =:  EMIT      \ _EMIT
$1FD =:  CSTR      \ _CSTR
$4CE               \ @NEST3
DUP  =, (."        \ COMPILETIME STRING LITERAL EMITER
DUP  =, ".         \ RUNTIME STRING LITERAL EMITER FUNCTION
=, TYPE  >, (ASTR CSTR ;DROP LOOPS CSTR EMIT ;
$2CC =: ("ABORT?   \ _ABORT?  IF 0 <>  -> ERROR TYPE STRING AFTER
: (" (ASTR ;       \ STRING LITERAL

$1F1 =:   STR      \ _WSTR
: W, STR , ;       \ READ , COMPILE WORD & POSITION TO NEXT
$1A0 =:  3+        \ _3P
$29A =:  SKIP      \ _SKIP
$213 =:  AND       \ _AND
$31E =: #??        \ _Z??
$25E =:  FIND      \ _FIND
$2FC =:  TOKEN?    \ _TOKEN?
: ' TOKEN? FIND 1 AND #?? ;
: LIKE ' @ ;    : ', ' , ;

\ $440 =, @_VAR         \ @_VAR
$130 =:  bl             \ RETURNS ASCII CODE OF SPACE CHARACTER
LIKE : =, CREATE  $440 ,  0 ,           \ ONLY ADDRESS NOTHING MORE
LIKE : =, CONST   LIKE bl ,  >, , ,<    \ COMPILES VALUE BY ","
LIKE ;` =, :` ', SKIP ', :              \ COMPILER VERSION OF ":"
' \ =: \`       \ COMPILING VERSION
' { =: {`       \ COMPILING VERSION
LIKE 3+ =, CELL+  ' 3+   3+ W, C@ C,    \ CELL+ :=: 2 +

$118 =: vOK.       \ _OK     - DEFER RESPONCE
$152 =:  CNTC      \ _CNTC   - COUNT OF EMITTED CHARS ON OUTPUT STREEM
$12C =:  0         \ _0
: META '        : IS ' CELL+ ! ;
: CR (." ,< 2 C, 13 C, 10 C, >, 0 ,< ' CNTC CELL+ , >, ;        META  CR vOK.


$433 =, ;SPC    \  EMIT SPACE IN THE END OF WORD  __RVAR2 _XSPC
: SPACE bl EMIT ;  \ EMIT BLANK SPACE
: ID. ;SPC ". ;

$11C =: vERR       \ _ERROR  - DEFER ERROR
$128 =:  TBUF      \ _TBUF
$29C =:  ABORT     \ _ABORT
: (ERR          \ SHOW ERROR ROUTINE
      CR  TBUF ID.  STATE ".  CR ABORT ,<   \ DOES NOT RETURN
META (ERR vERR

$320 =:  ??        \ _??
$244 =:  (EMIT     \ EMIT BY DOS FN $02
$24E =:   aINIT    \ _@_INI
$22F =: (ACC       \ _ACC    ACCEPT LINE FROM INPUT STREEM DOS FN $A
$114 =:  ACCEPT    \ _ACCEPT  DEFER (_ACC)
$278 =:     #,     \ _CLIT   - COMPILE NUMBER INLINE
$2A8 =:  ,         \ _COMMA  - MAIN COMPILING ROUTINE
$333 =: (COMMAER   \ _COMMAER
$2B0 =:  NUM,      \ _COMP_NUM  - PARSE & COMPILE STRINGS
$14C =:  DICT      \ _DICT   - DICTIONARY POINTER
$202 =:  .C@       \ _DLDB   - DUP & C@
$2F2 =: >DICT      \ _DPUSH  - ADR CNT ADR2
$1E0 =:  DROP      \ _DROP
$47C =:    (#IF    \ _DUP_IF - NON DROPPING IF
$2DA =:  =H        \ _ENTRYH - :=: HERE =:
$140 =:  ETIB      \ _ETIB   - END OF TIB BUFFER
$184 =:  EVAL      \ _EVAL   - EVALUATES MEMORY BUFFER -> ADR CNT
$2A0 =:  EX        \ _EX     - CALL CALLER
$4D5 =:  EXEC      \ _EXEC
$4D1 =:  EXECUTE   \ _EXECUTE
$29E =:  EXIT      \ _EXIT
$3EE =: (FND       \ _FND   - PRIMITIVE
$473 =: (FOR       \ _FOR   - PRIMITIVE
$481 =: (IF        \ _IF    - PRIMITIVE
$134 =: pINIT      \ _INIT
$27E =:  J         \ _J
$298 =: (JUMP      \ _JUMP  - PRIMITIVE
$1B2 =:  @+        \ _LDP
$1F7 =:  LIT       \ _LIT
$146 =:  LTIB      \ _LTIB
$3D0 =: (MPUSH     \ _MPUSH - PRIMITIVE
$3DD =: (MSTR      \ _MSTR  - PRIMITIVE
$294 =: (NEXT      \ _NEXT  - PRIMITIVE
$2A4 =:  NIP;      \ _NIPX
$3C5 =: (NUM       \ _NUM   - PRIMITIVE
$2B8 =:  NUMBER    \ _NUMBER
$102 =:  OP[]      \ _OPERATION
$1E2 =:  OVER      \ _OVER
$3A1 =: (PARS      \ _PARS
$302 =:  PARSE     \ _PARSE
$4D9 =:  @EXEC     \ _PERFORM
$2A2 =:  POP       \ _POP
$4B7 =:  PUSH      \ _PUSH
$296 =:  RDROP     \ _RDROP
$1CD =: @R+        \ _RLDP
$1C6 =:  C!R+      \ _RSTBP
$110 =:  SOURCE    \ _SOURCE
$455 =:  !         \ _ST
$158 =:  STATE     \ _STAT
$1AC =:  !+        \ _STP
$1EC =:  SWAP      \ _SWAP
$120 =:  TBL       \ _TBL
$124 =:  TIB       \ _TIB
$2FE =:  TOKEN     \ _TOKEN
$1DB =:  XCHG      \ _XCHG
$2A6 =:  ;,        \ _XCOMMA
$218 =:  XOR       \ _XOR
$314 =:  XSETSTR   \ _XSETSTR
$31C =:   TOK?     \ _XTOK?
$227 =: 0=         \ _ZEQ
$497 =: 0;         \ _ZEX

;--------------------------------------------------

: LATEST DICT CSTR + @ ;
: ;code POP LATEST ! ;
: RECURCE` LATEST , ;   \ REFERENCE TO SELF IN SAME WORD
HERE $E8 C, #DOES HERE CELL+ - , >, C@ C, ;
DUP =, #CAL, $E8 ,   DUP =, #JMP, $E9 ,   =, RET, $C3 ,
: DOES, #DOES   : CALL, #CAL,   : R, HERE CELL+ - , ;
LIKE ;` =, DOES>` >, ;code DOES, ,<   \ WE HAVE DOES !

\ CONSTANTS   VARIABLES VALUES  & DEFERS
16 CONST 1H        10 CONST lf       '0 CONST '0'     3 CONST 3
256 CONST 1B    $FC00 CONST FTOP    255 CONST &BYTE

: 2* DUP + ;
: B>W &BYTE AND ;
: >IP+ NOT 3  AND 2* POP + PUSH ;
: (,) CREATE , DOES>    : @, @ , ;      \ commaers  & --V MAKERS
: (:) CREATE DUP C, >IP+ , , , ',  DOES> CSTR =H >IP+ W, W, W, @EXEC ;

\ $440 =, @_VAR         \ @_VAR
\ $4C2 =, @_DEFER    \ @_DEFER
\ $457 =, @_SETVAR   \ @_SETVAR
\ $453 =, @_SETVAR2  \ @_SETVAR2
\ $43D =, @_CONS2    \ @_CONS2
\ $43C =, @_CONS3    \ @_CONS3
\ $49C =, @_SETPNT   \ @_SETPNT
\ $492 =, @_POINT    \ @_POINT
\ $4C1 =, @_DEFER2   \ @_DEFER2
\ $4C0 =, @_DEFER3   \ @_DEFER3
$4C2 { DEFER}   1 (:) DEFER
$457 { SETVAR}  $43D { CONS2}   2 (:) VALUE ,
$457 { SETVAR}  $4C1 { DEFER2}  2 (:) VECTOR ,
$49C { SETPNT}  $492 { POINT}   2 (:) POINT  ,
$440 { VAR}     $453 { SETVAR2} $43C { CONS3}  3 (:) QUAN ,



\ searching
HERE DOES, >, : (' C@ ' + ;
 DUP =, 'TO  2 C,   =, 'AT  4 C, \ ADDRESS OF XT+2 / XT+4
HERE DOES, >, (' EXEC ; DUP =, TO   2 C,  =, AT  4 C, \ EXECUTES XT+2 / XT+4
HERE DOES, >, (' , ;    DUP =, TO`  2 C,  =, AT` 4 C, \ COMPILES

\ CONTINUE EXTENDING COMPILER
: DXEP DUP : XEP XCHG EXECUTE POP ;     : (CALL @R+ PUSH ;
-#40 CONST FTOP   FTOP VALUE  FSTACK    : ;FSTACK FSTACK EX TO FSTACK ;
: >F ;FSTACK !+ ;  : F> FSTACK FTOP XOR #?? ;FSTACK : @- 2- DXEP @ ;
' , =: <RELEASE    : <RELEASE> <RELEASE : RELEASE> HERE F> : SWAP! SWAP ! ;
: MARK> HERE >F : Z, 0 , ;      : >MARK< MARK>  : <MARK HERE ;

          ' RELEASE> =: THEN`                        ' <MARK =: BEGIN`
' >MARK<    '  (FOR (=) FOR`            ' <RELEASE> ' (NEXT (=) NEXT`
' MARK>       ' (IF (=) IF`             ' MARK>     ' (JUMP (=) AHEAD`
' MARK>     ' (CALL (=) CALL`           ' <RELEASE  ' (JUMP (=) AGAIN`
' <RELEASE    ' (IF (=) UNTIL`          , RELEASE>  ' EXIT  (=) ;THEN`
' MARK>      ' (#IF (=) #IF`

\ STRING COMPILING
: (",)  '"  WORD                        \ PARSE & COMPILE STR
: CSTR, CSTR                            \ COUNTED STRING COMPILE
: STR, ;HERE (S! DROP; ,<               \ ADR COUNT STRING COMPILE
: `,, , , ;
LIKE ;` DUP =, (=) ,  ', `,,            \ DOERS
' (",) ' ("   (=) "`    \ STRING LITERALS  COMPILER
' (",) ' (A"  (=) A"`   \ STRING ERROR MESSAGES  COMPILER
' (",) ' (."  (=) ."`   \ STRING LITERALS OUTPUT COMPILER
: @OK ."  Ok" CR ." > " ;
META  @OK vOK

LIKE J  =, I 0 ,        : TWICE I PUSH ;
$4B1 =, 2DROP;    \ @2DROPX

: ALPHA  CALL '0' + ;THEN 9 OVER U< 0; 7 + ;
: 0?SKIP #IF ;THEN @R+ 2DROP; ,<
: H. ;SPC 1B  U/MOD TWICE  1H U/MOD  TWICE : DIG. ALPHA EMIT ;
: SGN? DUP 0< 0; '- EMIT ABS ;
: . SGN?  : U. ;SPC : `U. LF U/MOD 0?SKIP RECURCE DIG. ;

;-------------------------------------
$471 =, @1         \ @1
$1A3 =, @2P        \ @2P
$369 =, @@END?     \ @@END?
$36D =, @@ERNUM    \ @@ERNUM
$389 =, @@ESCAPE   \ @@ESCAPE
$36E =, @@EXNUM    \ @@EXNUM
$391 =, @@GETC     \ @@GETC
$288 =, @@LP1      \ @@LP1
$290 =, @@LP2      \ @@LP2
$354 =, @@N1       \ @@N1
$35C =, @@N2       \ @@N2
$370 =, @@N3       \ @@N3
$379 =, @@N4       \ @@N4
$361 =, @@NUMINI   \ @@NUMINI
$34F =, @@NUMZ     \ @@NUMZ
$364 =, @@SETBAS   \ @@SETBAS
$394 =, @@SGN      \ @@SGN
$3B4 =, @@SKIPX    \ @@SKIPX
$383 =, @@TON2     \ @@TON2
$3BC =, @@WEX      \ @@WEX
$165 =, @ABORT     \ @ABORT
$443 =, @ADR       \ @ADR
$22C =, @CF        \ @CF
$4E9 =, @DOES      \ @DOES
$4E8 =, @DOES2     \ @DOES2
$4E7 =, @DOES3     \ @DOES3
$18E =, @DOEVAL    \ @DOEVAL
$249 =, @DOS_DX    \ @DOS_DX
$459 =, @DROP      \ @DROP
$4EE =, @EX        \ @EX
$4C4 =, @EXEC      \ @EXEC
$48E =, @JUMP      \ @JUMP
$4F0 =, @LBL       \ @LBL
$207 =, @LDB       \ @LDB
$1B4 =, @LDP       \ @LDP
$4F2 =, @MAIN      \ @MAIN
$176 =, @MAINLP    \ @MAINLP
$4EF =, @NEST      \ @NEST
$4CF =, @NEST2     \ @NEST2
$4CE =, @NEST3     \ @NEST3
$4CD =, @NEST4     \ @NEST4
$4CC =, @NEST5     \ @NEST5
$489 =, @NEXT      \ @NEXT
$465 =, @NIP       \ @NIP
$461 =, @NIPX      \ @NIPX
$349 =, @NUM       \ @NUM
$44B =, @OVER      \ @OVER
$44C =, @POP       \ @POP
$434 =, @PUSHW     \ @PUSHW
$433 =, @PUSHW2    \ @PUSHW2
$432 =, @PUSHW3    \ @PUSHW3
$3E9 =, @PUSH_DC   \ @PUSH_DC
$3F3 =, @PUSH_SC   \ @PUSH_SC
$479 =, @RDROP     \ @RDROP
$4F1 =, @RETURN    \ @RETURN
$1BE =, @SETDROP   \ @SETDROP
$485 =, @SKIP      \ @SKIP
$1C0 =, @TOPDROP   \ @TOPDROP
$1E6 =, @TOPDUP    \ @TOPDUP
$46B =, @_1P_DUP   \ @_1P_DUP
$46A =, @_2P_DUP   \ @_2P_DUP
$4DF =, @_BARY     \ @_BARY
$46F =, @_CALL     \ @_CALL
$33D =, @_COMMA    \ @_COMMA
$43E =, @_CONS     \ @_CONS
$4BB =, @_DEFERO   \ @_DEFERO
$1BB =, @_DROP     \ @_DROP
$46C =, @_DUP      \ @_DUP
$1B8 =, @_FOR      \ @_FOR
$437 =, @_IJ       \ @_IJ
$342 =, @_MAKER    \ @_MAKER
$463 =, @_NIP      \ @_NIP
$4A0 =, @_PARAM1   \ @_PARAM1
$4A3 =, @_PARAM2   \ @_PARAM2
$4A6 =, @_PARAM3   \ @_PARAM3
$1BA =, @_PUSH     \ @_PUSH
$427 =, @_RLD@     \ @_RLD@
$42C =, @_RST@     \ @_RST@
$452 =, @_SETVAR3  \ @_SETVAR3
$32C =, @_STATE    \ @_STATE
$45E =, @_SWAP_NIP \ @_SWAP_NIP
$449 =, @_VAR2     \ @_VAR2
$448 =, @_VAR3     \ @_VAR3
$4DD =, @_WARY     \ @_WARY

