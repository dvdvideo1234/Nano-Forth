code LW =                                               IF ADR DOES?                                                      -IF 3 AT ADR +! /1PAS ." DOES> "                                ;THEN  /END                                                   THEN   LIT [ '@, QUIT ]                                         LW @ = IF /END THEN                                             PS 0;   LW ID.OK   7  NEWLN? ;                                                                                            #NAME PARAMS. ," P1@  ," P1!  ," P1    ," P2@  ," P2!  ," P2                  ," P3@  ," P3!  ," P3    ," P4@  ," P4!  ," P4                  ," P5@  ," P5!  ," P5    ," P6@  ," P6!  ," P6                  ," P7@  ," P7!  ," P7    ," P8@  ," P8!  ," P8                                                                                                                                                                                                                                                                     #NAME OTHER.  ," RECOVER                                         ," NEXT   ," ".       ," 2DUP  ," 2DROP  ," CNTDO               ," 1+!    ," 2+!      ," 1-!   ," 2-!    ," 1-!@                ," 2-!@   ," @1+!     ," @2+!  ," -ROT   ," RDROP               ," +!     ," COMPILE  ," 0MAX  ," PUSH   ," POP                 ," XOR!   ," STR      ," D!    ," D@     ," DNEGATE                                                                            25 XSC OTHER ]  RECOVER                                           TO (FOR   AT ("     TO DUP   TO DROP   AT (DO    \  5           TO 1+     TO 2+     TO 1-    TO 2-     AT 1-     \ 10           AT 2-     AT 1+     AT 2+    TO ROT    AT DROP   \ 15           AT +      TO ,      TO MAX   >R        R>        \ 20           TO XOR    TO COUNT  TO !     TO @    TO NEGATE   \ 22               OTHER. ;M      \ SHOW ONLY                                                                                                                                                                #NAME COMP. ," BCOMPILE                                         1 XSC COMP ] BCOMPILE  \ COMPILE        \ WORD COMPILE ?          BWADR TO NA  /1PAS COMP.                                        IX IF NA ID.OK EXIT THEN ." [ " NA #. ."  C, ] "  ;M          \ #NAME NLIT. ," BLIT ," LIT ," DLIT                                                                                            3 XSC NLIT ]  BLIT LIT DLIT      \ BYTE COMPILE ?                 BWADR  WDADR TO HW TO NA  /1PAS                                 NA HW D. IX 1- 0= 256 NA U< AND IF                                       ." ( " NA ID.OK ." ) "  THEN ;M                      24 XSC PARAMS  HEX                                                     B50 , B52 , B54 ,       B48 , B4A , B4C ,                       B40 , B42 , B44 ,       B38 , B3A , B3C ,                       B30 , B32 , B34 ,       B28 , B2A , B2C ,                       B20 , B22 , B24 ,       B18 , B1A , B1C ,               DECIMAL  ] PARAMS. ;M                                            #NAME STARTS.                                                       ," FUNC:  ," ->:   ," :TR-  ," :   ," :1                        ," :2     ," :3    ," :4                                    8 XSC STARTS                                                       '@, ID.OK    '@, QUIT    '@, ??    '@, XSC    1-,               1-,          1-,         1-,                                  ]  BEG? 5 U< -IF /END THEN                                         /1PAS  STARTS.  BEG? -IF BEG. THEN ;M                                                                                       ( PROBA ID.OK     )                                             #NAME /END. ," EXIT ," RETURN ," ?TR;                                                                                           3 XSC ENDS ] EXIT  RETURN  AT NOOP   \  EXIT ?                      /END  /1PAS  EF IF ." ; " ;THEN /END. ;M                                                                                                                                                    : 1I             \ DECOMPOSE 1 INSTRUNCTION                         THENS.       \ IF, -IF, OF, ELSE, WHILE,  ENDS?                 BEGINS.      \ START OF LOOP  ? ON THIS ADDRESS                 WADR TO LW   \ GET WORD  -> LAST WORD                           STARTS       \ IS IT STARTING WORD ?                            OTHER        \                                                  PARAMS       \ PARAMETTERS  IN FUNCTIONS                        COMP         \                                                  STRG         \ IS IT STRING WORD ?                              NLIT         \ LITERALS                                         LOOPS        \ CICLES                                           ENDS         \ END WORDS                                        BRANC        \ BRANCHES                                         SPEC ;       \ SPECIAL WORDS - DOES> .. ETC                                                                                                                                                  |  ( -HEADERS OFF )                                            : PAS TO PS    \ PASS NUMBER 0\1                                   1A TO ADR   \ START ADR -> OPERATION ADR                         0 TO EF    \ 0 -> END FLAG                                     -1 TO LW    \ -1 -> LAST WORD - NO SUCH WORD                    BEGIN 1I EF UNTIL ;                                                                                                          : @HACK DECIMAL CR TO 1A    \ FIRST ADDRESS                       0 TO TAB  CR              \ NO TABULATION                       0 TO LA                   \ LAST ADDRES NOT FOUND YET           PAD 1K 2* +  DUP 1K + DUP \ EMPTY  FORWORD'S STACK              AT BSTK 2! DUP AT FSTK 2! \ EMPTY BACKWORD'S STACK              1A @ DOES?                \ IS IT A DOES> ? CHILD               -IF 1A ID.OK ;THEN        \   YES                               0 PAS 1 PAS    ;          \ NO -> LET'S  HACK IT                                                                                                                                                                                                              | : @@@ CREATE C, DOES> C@ ' + @HACK ;   \ FLAT HACK 0CFA         0 @@@ HACK   2 @@@ 'HACK   4 @@@ "HACK \ 1CFA 2CFA                                                                            : >ADR  ADR @HACK ;    \ CONTINUE HACKING ON ADR                                                                                | : @@ CREATE C, DOES> C@ ' + STR   \ 0CFA  DOES>                      PUSH 1H DUMP POP 3+ @HACK ;  \ 1CFA 2CFA                   0 @@ >>   2 @@ TO>  4 @@ AT>                                                                                                                                                                                                                                                                                                                                                                                                                                 ( 8 QUINS PROBLEM                                            )  FUNC: QUINS ( X / IDX ) SKIP [ -HEADERS                         8 CONSTANT Q8 Q8 DUP + DUP BARY DIAG1  BARY DIAG2  Q8 BARY ROW  Q8 BARY FROW ( TEST SET RESET ) 0 NM: PUSH IDX FROW R@ EXECUTE    X IDX + DIAG1 R@ EXECUTE Q8 IDX - X + DIAG2 POP EXECUTE ;M          HEADER    TEST , ] C@ OR ;M                                 ' TEST LIKE   SET_   ] 1 SWAP C! ;M                           | ' SET_ LIKE   RESET  ] 0 SWAP C! ;M                           MAC: SET IDX 1+ X ROW C! SET_  ;                                MAC: END? IDX 1+ DUP TO IDX Q8 = ;                              MAC: TRY  0 TEST -IF  SET X 1+ RECURCE RESET THEN ;             MAC: TAB? Q8 78 OUTC - U< IF SPACE SPACE ELSE CR THEN ;         MAC: PRN? IDX 1+ Q8 = IF TAB? THEN ;                            MAC: PRINT IDX ROW C@ ALPHA EMIT PRN? ; ] THEN                  BEGIN X Q8 = IF PRINT ELSE TRY THEN END? UNTIL [ PRUNE ] ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      