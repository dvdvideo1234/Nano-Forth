
\ MARKER EXT3.

\ : `SIZE { HND -- DX:AX } `POSF IO? _DX _AX
\    _BX `SIZE TO _CX _AX _DX  { DX:CX} ROT _CX _BX `SEEK ;
\ : Fcut { SCR -} `RW NIP D0 ROT FWRITE DROP ;
\ : Fsize SCRH `SIZE 1K UM/MOD NIP ;

     0 VALUE NBUFS
     0 VALUE SCRH
     0 VALUE PREV
 $E000 VALUE FIRST   \ 1 / 8 OT 64K
     0 VALUE USE

: `RW 1K UM* SCRH `SEEK  IO?  1K SCRH  EX IO? ;
: `WBLK `RW FWRITE ;    : `RBLK `RW FREAD ;

3  DUP TO   NBUFS  1+ DUP  BARY FBUFS    WARY  BUFS

: @BUF PREV 1K U* FIRST + ;
HERE DOES, >, C@ PREV FBUFS C! ;
DUP   =, DISCARD  0 C,  =, UPDATE  -1 C,
: !BUF PREV BUFS ! ;
: +BUF USE 1+ NBUFS AND DUP TO USE ;
: /BUF @BUF 1K ERASE ;
: EMPTY-BUF -1 !BUF  DISCARD /BUF ;
: EMPTY-BUFS  NBUFS  FOR> +BUF TO PREV EMPTY-BUF  <NEXT ;
: ?BUF PUSH 0 BUFS NBUFS 1+ POP SCAN ;
: ?SAVE PREV FBUFS C@ IF @BUF PREV BUFS @ `WBLK DISCARD THEN ;
: ;ABLK INVALIDATE? 0 TO _FR XCHG PUSH EX RDROP @BUF IO? ;
: BUFFER ;ABLK J ?BUF -IF ?BUF -IF DROP +BUF THEN THEN TO PREV
 ?SAVE /BUF J !BUF ;
: SAVE-BUFS  NBUFS FOR> +BUF TO PREV ?SAVE <NEXT ;
: BLOCK ;ABLK J ?BUF -IF DROP J BUFFER J `RBLK ;THEN TO PREV ;

\ : `SOURCE ETIB 0?SKIP EXIT  BLK  BLOCK 1K + DUP TO ETIB ;
\ : THRU PUSH 1- POP ;DROP OVER - LOOPS 1+ DXEP
\ : LOAD 1K 0 ;TI (JUMP `DOEVAL ,<

\ -------------------------------------------------------------

: `SOURCE ETIB 0?SKIP EXIT  BLK BLOCK 1K + DUP TO ETIB ;
META `SOURCE SOURCE
: THRU PUSH 1- POP ;DROP OVER - LOOPS 1+ DXEP
: LOAD DUP 0= A"  BLK0!" 0 1K ROT ;TIBLK (JUMP `DOEVAL ,<
\ : LIST DUP TO SCR BLOCK
\ : .BLOCK  CR ." SCR# " SCR . 1H LOOPS 1H 1- J -
\ : .LINE CR 2 SPACES B. ;[] 1L ?TYPE ;

\ -------------------------------------------------------------

: -USE SCRH 1+ 0; SCRH FCLOSE -1 TO SCRH ;
: FLUSH SAVE-BUFS EMPTY-BUFS ;
: USING FLUSH -USE TOKEN? FOPEN TO SCRH ;
\ : BYE CLOSE-ALL FLUSH -USE BYE ;

USING T123.GGG
: / U/MOD NIP ;
' @XY =: ATXY
: BLANK bl FILL ;
